# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
  name: SHA
  value: $(git rev-parse HEAD)

stages:
- stage: BuildnTest
  displayName: Build and Test the client image
  jobs:  
  - job: ClientTestBuild
    displayName: Build and test the client image
    steps:
    - script: |
       docker build -t vpraveenon/client-test -f client/Dockerfile.dev client/
       docker run -e CI=true vpraveenon/client-test npm run test -- --coverage 

- stage: BuildProdImage
  displayName: Build the production images one by one
  jobs:
    - job: ClientProdBuild
      displayName: Build and push the client image
      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'DockerHub'
          repository: 'vpraveenon/multi-client'
          command: 'buildAndPush'
          Dockerfile: 'client/Dockerfile'
          tags: |
            latest
            $(Build.BuildId)
            $(SHA)
    - job: ServerProdBuild
      displayName: Build and push the Server image
      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'DockerHub'
          repository: 'vpraveenon/multi-server'
          command: 'buildAndPush'
          Dockerfile: 'server/Dockerfile'
          tags: |
            latest
            $(Build.BuildId)
            $(SHA)
    - job: WorkerProdBuild
      displayName: Build and push the worker image
      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'DockerHub'
          repository: 'vpraveenon/multi-worker'
          command: 'buildAndPush'
          Dockerfile: 'worker/Dockerfile'
          tags: |
            latest
            $(Build.BuildId)
            $(SHA)
      
            
